<Window
    x:Class="LocationToVisibilityConverter.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:map="clr-namespace:MapControl;assembly=MapControl.WPF"
    xmlns:vm="clr-namespace:ViewModel"
    xmlns:local="clr-namespace:LocationToVisibilityConverter"
    Title="cautious" Height="600" Width="800"
    Stylus.IsPressAndHoldEnabled="False">
    <Window.Resources>
        <!--
            TileLayer with OpenStreetMap data.
        -->
        <map:TileLayer x:Key="OpenStreetMap" SourceName="OpenStreetMap"
                       Description="Maps © [OpenStreetMap Contributors](http://www.openstreetmap.org/copyright)"
                       TileSource="http://{c}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                       MaxZoomLevel="19"/>

        <local:LocationToVisibilityConverter x:Key="LocationToVisibilityConverter"/>

        <!--DataTemplate x:Key="PolylineItemTemplate">
            <map:MapPolyline Locations="{Binding Locations}" Stroke="Green" StrokeThickness="3"/>
        </-->

        <Style x:Key="PolylineItemStyle" TargetType="map:MapItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <map:MapPolyline Locations="{Binding Locations}" Stroke="Red" StrokeThickness="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PointItemStyle" TargetType="map:MapItem">
            <EventSetter Event="TouchDown" Handler="MapItemTouchDown"/>
            <Setter Property="map:MapPanel.Location" Value="{Binding Location}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <Canvas>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="labelBackground" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="selectedPath" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="selectedPath" Fill="White" Opacity="0">
                                <Path.Data>
                                    <EllipseGeometry RadiusX="15" RadiusY="15"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="2" Fill="Transparent">
                                <Path.Stroke>
                                    <SolidColorBrush Color="Gray"/>
                                </Path.Stroke>
                                <Path.Data>
                                    <EllipseGeometry RadiusX="8" RadiusY="8"/>
                                </Path.Data>
                            </Path>
                            <Grid Canvas.Left="15" Canvas.Top="-8">
                                <Rectangle x:Name="labelBackground" Fill="White" Opacity="0"/>
                                <local:OutlinedText Margin="1" OutlineThickness="1.5" Text="{Binding Name}"/>
                            </Grid>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PushpinItemStyle" TargetType="map:MapItem">
            <EventSetter Event="TouchDown" Handler="MapItemTouchDown"/>
            <Setter Property="map:MapPanel.Location" Value="{Binding Location}"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Visibility">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource LocationToVisibilityConverter}">
                        <Binding Path="(map:MapPanel.ParentMap)" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="RenderTransform" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <map:Pushpin Content="{Binding Name}" Foreground="{TemplateBinding Foreground}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Foreground" Value="OrangeRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <vm:ViewModel/>
    </Window.DataContext>

    <!--Fenstererscheinungsbild-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="#7FFFFFFF">
            <TextBlock Margin="2" FontSize="10" map:HyperlinkText.InlinesSource="{Binding TileLayer.Description, ElementName=map}"/>
        </-->

        <map:Map x:Name="map" ZoomLevel="7" MaxZoomLevel="20" MinZoomLevel="3" Center="{Binding MapCenter}"
                 TileLayer="{StaticResource OpenStreetMap}"
                 MouseLeftButtonDown="MapMouseLeftButtonDown" MouseRightButtonDown="MapMouseRightButtonDown"
                 MouseMove="MapMouseMove" MouseLeave="MapMouseLeave"
                 ManipulationInertiaStarting="MapManipulationInertiaStarting" Margin="0,20,0,0" Grid.RowSpan="2">

            <!--map:MapGraticule Opacity="0.6"/-->
            <!--map:MapScale Margin="4" Opacity="0.8" HorizontalAlignment="Left" Background="Transparent"/-->

            <!-- use ItemTemplate or ItemContainerStyle alternatively -->
            <!--map:MapItemsControl ItemsSource="{Binding Polylines}"
        		ItemTemplate="{StaticResource PolylineItemTemplate}"/-->
            <!--<map:MapItemsControl ItemsSource="{Binding Polylines}"
                                 ItemContainerStyle="{StaticResource PolylineItemStyle}"/>

            <map:MapItemsControl ItemsSource="{Binding Points}"
        		ItemContainerStyle="{StaticResource PointItemStyle}"
        		IsSynchronizedWithCurrentItem="True"
        		SelectionMode="Extended"/>

            <map:MapItemsControl ItemsSource="{Binding Pushpins}"
        		ItemContainerStyle="{StaticResource PushpinItemStyle}"
        		IsSynchronizedWithCurrentItem="True"/>

            <Path map:MapPanel.Location="53.5,8.2" Stroke="Blue" StrokeThickness="3" Fill="#1F007F00">
                <Path.Data>
                    <EllipseGeometry RadiusX="1852" RadiusY="3000" Transform="{Binding ScaleTransform, ElementName=map}"/>
                </Path.Data>
            </map:MapItemsControl>

            <map:MapPath Stroke="Blue" Fill="Aqua" Opacity="0.5">
                <map:MapPath.Data>
                    <GeometryGroup FillRule="EvenOdd">
                        <EllipseGeometry Center="8.2,63.5" RadiusX="0.025" RadiusY="0.025"/>
                        <EllipseGeometry Center="8.2,63.51" RadiusX="0.015" RadiusY="0.015"/>
                    </GeometryGroup>
                </map:MapPath.Data>
            </map:MapItemsControl>-->

        </map:Map>

        <!--OSM Informationszeile-->
        <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="#7FFFFFFF" Height="17" Width="171">
            <TextBlock Margin="2" FontSize="10" map:HyperlinkText.InlinesSource="{Binding TileLayer.Description, ElementName=map}"/>
        </Border>

        <!--Zeigt aktuelle Mausposition-->
        <TextBlock x:Name="mouseLocation" Margin="0,10,0,22" FontFamily="Segoe UI Mono" HorizontalAlignment="Right" Width="68" Grid.Row="1" Height="34" VerticalAlignment="Center"/>

        <!--Ermöglicht Vergrößerung einzustellen-->
        <!--StackPanel Margin="100,10,1,31"-->

        <!--Menüleiste-->
        <Menu x:Name="menu" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width= "792">
            <MenuItem Header="Datei"/>
            <MenuItem Header="Bearbeiten"/>
            <MenuItem Header="Info">
                <MenuItem Header="Quellen" Click="Item_Quellen_Click"/>
                <MenuItem Header="Über..." Click="Item_Über_Click"/>
            </MenuItem>
        </Menu>

        <!--Suchleiste-->
        <Button Content="Suche" Height="22" Margin="0,25,10,0" VerticalAlignment="Top" Click="Button_Click" HorizontalAlignment="Right" Width="72"/>

        <TextBox Name="Suchbar" Height="22" Margin="10,25,100,0" AcceptsReturn="False" Text="Gutachter, Adresse oder Ort suchen" TextChanged="TextBox_TextChanged" VerticalAlignment="Top" />
        <Grid Height="34" HorizontalAlignment="Right" Width="126" Margin="0,68,10,0" VerticalAlignment="Top">
            <TextBlock Text="Vergrößerung" Margin="20,0,19,19" HorizontalAlignment="Center" Foreground="Black" FontSize="10"/>
            <Slider ToolTip="Zoom Level" Width="100" VerticalAlignment="Center" SmallChange="0.01"
                        Minimum="{Binding MinZoomLevel, ElementName=map}"
                        Maximum="{Binding MaxZoomLevel, ElementName=map}"
                        Value="{Binding TargetZoomLevel, ElementName=map}" Margin="0,15,0,0"/>
        </Grid>
    </Grid>
</Window>
